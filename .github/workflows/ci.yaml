on: [push]

name: CI

env: 
  CARGO_TERM_COLOR: always
  REGISTRY: ghcr.io

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build
    steps:
      - uses: actions/setup-node@v1
        with:
          node-version: 18
      - uses: actions/checkout@v3
      - name: 'Cache node_modules'
        uses: actions/cache@v2
        with:
          path: ./frontend/node_modules
          key: ${{ runner.os }}-node-v18-${{ hashFiles('./frontend/package-lock.json') }}
      - name: 'Cache Rust dependencies'
        uses: Swatinem/rust-cache@v2

      - name: "cd into /frontend and build"
        run: |
          cd frontend
          npm install
          npm run build

      - name: "Build backend"
        run: |
          rustup target add x86_64-unknown-linux-musl
          apt install musl-tools -y
          RUSTFLAGS='-C link-arg=-s' cargo build --release --target x86_64-unknown-linux-musl
          cp ./target/release/resalt ./resalt

      - uses: katyo/publish-crates@v1
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        with:
          registry-token: ${{ secrets.CARGO_REGISTRY_TOKEN }}

      - name: Read version number
        run: |
          echo "spec_version=$(grep "version = " Cargo.toml | head -n 1  | cut -d '"' -f 2)" >> $GITHUB_ENV
      - name: Print version number
        run: echo ${{ env.spec_version }}
      - name: Build Docker image
        run: docker build . -t ghcr.io/resalt-dev/resalt:${{ env.spec_version }}
      - name: Log in to Github Registry
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | docker login -u ${{ github.actor }} --password-stdin ${{ env.REGISTRY }}
      - name: Push Docker image
        run: docker push ghcr.io/resalt-dev/resalt:${{ env.spec_version }}
